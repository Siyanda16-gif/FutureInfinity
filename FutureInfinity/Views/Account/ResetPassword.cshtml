@model GROUP_Q.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
}

<main aria-labelledby="title">
    <h2 id="title" style="font-family: Arial, sans-serif; color: red;">@ViewBag.Title.</h2>

    @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4 style="font-family: Arial, sans-serif; color: black;">Reset your password.</h4>
        <hr style="border-color: black;" />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Code)
        <div class="row">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label", style = "font-family: Arial, sans-serif; color: black;" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", style = "font-family: Arial, sans-serif; color: black;" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label", style = "font-family: Arial, sans-serif; color: black;" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", style = "font-family: Arial, sans-serif; color: black;" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 col-form-label", style = "font-family: Arial, sans-serif; color: black;" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", style = "font-family: Arial, sans-serif; color: black;" })
            </div>
        </div>
        <div class="row">
            <div class="offset-md-2 col-md-10">
                <input type="submit" class="btn btn-outline-dark" value="Reset" style="font-family: Arial, sans-serif; color: white; background-color: black;" />
            </div>
        </div>
    }
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
