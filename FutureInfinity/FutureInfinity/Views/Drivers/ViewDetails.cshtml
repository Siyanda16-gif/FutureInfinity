﻿@model GROUP_Q.Models.Manifesto

@{
    ViewBag.Title = "Navigate Waybill";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <!-- Map Card (Centered) -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title" style="text-align:center;">Delivery Details</h5>
                    <dl class="row mb-0">
                        <dt class="col-sm-4" style="color: #d4a762;">Full Name:</dt>
                        <dd class="col-sm-8" style="color: #d4a762;">@Html.DisplayFor(model => model.FullName)</dd>

                        <dt class="col-sm-4" style="color: #d4a762;">Contact No:</dt>
                        <dd class="col-sm-8" style="color: #d4a762;">@Html.DisplayFor(model => model.ContactNo)</dd>

                        <dt class="col-sm-4" style="color: #d4a762;">Destination Address:</dt>
                        <dd class="col-sm-8" style="color: #d4a762;">@Html.DisplayFor(model => model.DestinationAddress)</dd>

                        <dt class="col-sm-4" style="color: #d4a762;">Status:</dt>
                        <dd class="col-sm-8" style="color: #d4a762;">@Html.DisplayFor(model => model.Status)</dd>

                        <dt class="col-sm-4" style="color: #d4a762;">Vehicle Plate:</dt>
                        <dd class="col-sm-8" style="color: #d4a762;">@Model.NumberPlate</dd>
                    </dl>
                    <form>
                        <div class="form-group">
                            <input id="travelfrom" type="text" value="281 Cowey Rd (Problem Mkhize Rd),Morningside, Durban" name="name" class="form-control" style="width:500px;display:none" disabled="disabled" />
                        </div>
                        <div class="form-group">
                            <input id="travelto" type="text" name="name" value="@Model.DestinationAddress" class="form-control" style="width:500px;display:none" disabled="disabled" />
                        </div>
                    </form>

                    <div>
                        <div id="dvDistance" style="font-size:20px; color:black"></div>
                    </div>

                    <div id="dvMap" style="min-height:500px;width:100%"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<br />

<div class="text-center">
    @if (Model.Status == "Order Appointed To Driver")
    {
        <a href="/Drivers/DriverSignOff?manifestoInfoId=@Model.Id" class="btn btn-warning">Accept Delivery</a>
    }
    @if (Model.Status == "Package Has Been Dispatched")
    {
        <a href="/Drivers/CustomerConfirm?manifestoInfoId=@Model.Id" class="btn btn-warning">Handover Delivery</a>
    }
    @if (Model.Status == "Return Requested")
    {
        <a href="/Drivers/ConfirmSign?manifestoInfoId=@Model.Id" class="btn btn-warning">Confirm Package Recieved</a>
    }
    @if (Model.Status == "Package collected from customer")
    {
        <a href="#" class="btn btn-warning request-return-btn" data-orderid="@Model.Id">Request Admin Return Confirmation</a>
    }
</div>


<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<!--ENSURE YOU CHANGE TO YOUR OWN API KEY HERE !!! -->
<script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAYgA0WDcNBnR7ewQIWEqUbNmDUdnHCL9M" type="text/javascript"></script>


<!-- code for example 1 -->
<script>

            var source, destination;
            var tr = "@Model.DestinationAddress";
            var directionsDisplay;
            var directionsService = new google.maps.DirectionsService();

            // initialise the location of the map on Chichester in England (ref lat and lng)
            var map = new google.maps.Map(document.getElementById('dvMap'), {
                center: { lat: -29.856349, lng: 31.003004 },
                zoom: 13,
                mapTypeId: 'roadmap'
            });

            google.maps.event.addDomListener(window, 'load', function () {
                new google.maps.places.SearchBox(document.getElementById('travelfrom'));
                new google.maps.places.SearchBox(document.getElementById('travelto'));
                directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
            });
            window.onload = function () {
                setTimeout(GetRoute, 3000);
            }
            function GetRoute() {


                directionsDisplay.setMap(map);
                source = document.getElementById("travelfrom").value;
                destination = document.getElementById("travelto").value;

                var request = {
                    origin: source,
                    destination: destination,
                    travelMode: google.maps.TravelMode.DRIVING
                };

                directionsService.route(request, function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
                    }
                });

                //*********DISTANCE AND DURATION**********************//
                var service = new google.maps.DistanceMatrixService();
                service.getDistanceMatrix({
                    origins: [source],
                    destinations: [destination],
                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: google.maps.UnitSystem.METRIC,
                    avoidHighways: false,
                    avoidTolls: false
                }, function (response, status) {

                    if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                        var distance = response.rows[0].elements[0].distance.text;
                        var duration = response.rows[0].elements[0].duration.value;
                        var dvDistance = document.getElementById("dvDistance");
                        duration = parseFloat(duration / 60).toFixed(2);
                        dvDistance.innerHTML = "";
                        dvDistance.innerHTML += "Distance: " + distance + "<br />";
                        dvDistance.innerHTML += "Time:" + duration + " min";

                    }
                    else {
                        alert("Unable to calculate the distance for this road");
                    }
                });
            }

</script>
<hr />

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".request-return-btn").click(function (e) {
                e.preventDefault();

                var orderId = $(this).data("orderid");

                Swal.fire({
                    title: 'Arrived at Warehouse',
                    text: 'The package has arrived at the warehouse and is awaiting admin confirmation that the package has been returned successfully.',
                    icon: 'info',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/Drivers/UpdateOrderStatus',
                            type: 'POST',
                            data: { orderId: orderId, status: 'Awaiting Admin Confirmation' },
                            success: function (response) {
                                console.log(response);
                                // Redirect to DeliveryList after updating the status
                                window.location.href = '/Drivers/DeliveryList';
                            },
                            error: function (error) {
                                console.log(error);
                            }
                        });
                    }
                });
            });
        });
    </script>
}
